<?php	/*		Register Post type Διαγώνισμα	*/function msr_diagonisma() {	$labels = array(		'name'               => 'Tests',		'singular_name'      => 'Test',		'add_new'            => 'New Test',		'add_new_item'       => 'Add Test',		'edit_item'          => 'Edit Test',		'new_item'           => 'New Test',		'all_items'          => 'All Tests',		'view_item'          => 'View Test',		'search_items'       => 'Search',		'not_found'          => 'No test was found',		'not_found_in_trash' => 'No tests were found in the bucket', 		'parent_item_colon'  => '',		'menu_name'          => 'Tests'	);	$args = array(		'labels'			  => $labels,		'description'		  => 'Tests',		'public'			  => true,		'exclude_from_search' => true,		'publicly_queryable'  => true,		'show_ui'			  => true,		'show_in_nav_menus'	  => true,		'show_in_menu'		  => true,		'menu_position'		  => 20,		'menu_icon'			  => 'dashicons-welcome-write-blog',		'supports'			  => array( 'title', 'editor', 'revisions'),		'has_archive' 		  => false,		'rewrite'			  => array( 'slug' => 'diagonisma' , 'with_front' => true ),		'capability_type'	  => 'diagonismata',		'capabilities'		  => array(			'edit_post'			 => 'edit_diagonisma',			'read_post'			 => 'read_diagonisma',			'delete_post'		 => 'delete_diagonisma',			'edit_posts'		 => 'edit_diagonismata',			'edit_others_posts'	 => 'edit_others_diagonismata',			'publish_posts'		 => 'publish_diagonismata',			'read_private_posts' => 'read_private_diagonismata',			'create_posts'		 => 'edit_diagonismata',		),	);	register_post_type( 'diagonisma', $args );	}add_action( 'init', 'msr_diagonisma' );function msr_diagonisma_updated_messages( $messages ) {	global $post, $post_ID;	$messages['diagonisma'] = array(		0 => '', 		1 => sprintf( __('The entry was updated. <a href="%s">Visit</a>'), esc_url( get_permalink($post_ID) ) ),		2 => __('Updated'),		3 => __('Deleted.'),		4 => __('The entry was updated.'),		5 => isset($_GET['revision']) ? sprintf( __('Entry restored to revision from %s'), wp_post_revision_title( (int) $_GET['revision'], false ) ) : false,		6 => sprintf( __('The entry was posted. <a href="%s">Visit</a>'), esc_url( get_permalink($post_ID) ) ),		7 => __('The entry was updated.'),		8 => sprintf( __('The entry was updated. <a target="_blank" href="%s">Preview</a>'), esc_url( add_query_arg( 'preview', 'true', get_permalink($post_ID) ) ) ),		9 => sprintf( __('Entry scheduled for: <strong>%1$s</strong>. <a target="_blank" href="%2$s">Preview</a>'), date_i18n( __( 'M j, Y @ G:i' ), strtotime( $post->post_date ) ), esc_url( get_permalink($post_ID) ) ),		10 => sprintf( __('The draft was updated. <a target="_blank" href="%s">Preview</a>'), esc_url( add_query_arg( 'preview', 'true', get_permalink($post_ID) ) ) ),	);	return $messages;}add_filter( 'post_updated_messages', 'msr_diagonisma_updated_messages' );	/*		Meta Boxes for test	*/	function msr_diagonismata_meta() {	add_meta_box (		'msr_diagonismata_meta',		'Choose Test',		'msr_diagonismata_meta_cb',		'diagonisma',		'normal',		'high'	);}add_action( 'add_meta_boxes', 'msr_diagonismata_meta' );function msr_diagonismata_meta_cb ( $post ) {	wp_nonce_field( basename( __FILE__ ), 'msr_diagonismata_meta_nonce' );	$stored_meta = get_post_meta( $post->ID );?>	<table class="msr-epiloges-diag">		<tr valign="middle">			<th scope="row"><label for="msr-katigoria-diag">Category of Questions: </label></th>			<td>				<?php				$args = array(					'hide_empty' => false,				);				$katigories = get_terms( 'erotiseis_cat', $args );				?>				<select id="msr-katigoria-diag" name="msr-katigoria-diag">					<option value=""><?php echo 'choose'; ?></option>					<?php					foreach( $katigories as $katigoria ) { ?>						<option value="<?php echo $katigoria->term_id; ?>" <?php selected( esc_attr( $stored_meta['msr-katigoria-diag'][0] ), $katigoria->term_id ); ?>><?php echo $katigoria->name; ?></option>					<?php					}					?>				</select>			</td>		</tr>		<tr valign="middle">			<th scope="row"><label for="msr-pollaplis-num-diag">Multiple Questions: </label></th>			<td><input type="number" name="msr-pollaplis-num-diag" value="<?php if( !empty( $stored_meta['msr-anaptiksis-num-diag'][0] ) ) { echo $stored_meta['msr-pollaplis-num-diag'][0]; } ?>" /> <label for="msr-pollaplis-var-diag">Units: </label><input type="number" name="msr-pollaplis-var-diag" value="<?php if( !empty( $stored_meta['msr-pollaplis-var-diag'][0] ) ) { echo $stored_meta['msr-pollaplis-var-diag'][0]; } ?>" /></td>		</tr>		<tr valign="middle">			<th scope="row"><label for="msr-anaptiksis-num-diag">Description Questions: </label></th>			<td><input type="number" name="msr-anaptiksis-num-diag" value="<?php if( !empty( $stored_meta['msr-anaptiksis-num-diag'][0] ) ) { echo $stored_meta['msr-anaptiksis-num-diag'][0]; } ?>" /> <label for="msr-anaptiksis-var-diag">Units: </label><input type="number" name="msr-anaptiksis-var-diag" value="<?php if( !empty( $stored_meta['msr-anaptiksis-var-diag'][0] ) ) { echo $stored_meta['msr-anaptiksis-var-diag'][0]; } ?>" /></td>		</tr>		<tr valign="middle">			<th scope="row"><label for="msr-vathm-diag">Maximum Rating:: </label></th>			<td>				<select id="msr-vathm-diag" name="msr-vathm-diag">					<option value="10" <?php selected( esc_attr( $stored_meta['msr-vathm-diag'][0] ), 10 ); ?>>10</option>					<option value="100" <?php selected( esc_attr( $stored_meta['msr-vathm-diag'][0] ), 100 ); ?>>100</option>				</select>			</td>		</tr>		<tr valign="middle">			<th scope="row"><label for="msr-random-diag">Randomization of Questions: </label></th>			<td>				<select id="msr-random-diag" name="msr-random-diag">					<option value="yes" <?php selected( esc_attr( $stored_meta['msr-random-diag'][0] ), 'yes' ); ?>>Yes</option>					<option value="no" <?php selected( esc_attr( $stored_meta['msr-random-diag'][0] ), 'no' ); ?>>No</option>				</select>			</td>		</tr>	</table><?php}function msr_diagonismata_meta_save ( $post_id ) {	$is_autosave = wp_is_post_autosave( $post_id );	$is_revision = wp_is_post_revision( $post_id );	$is_valid_nonce = ( isset( $_POST[ 'msr_diagonismata_meta_nonce' ] ) && wp_verify_nonce( $_POST[ 'msr_diagonismata_meta_nonce' ], basename( __FILE__ ) ) ) ? 'true' : 'false';	if ( $is_autosave || $is_revision || !$is_valid_nonce ) {		return;	}	if( isset( $_POST[ 'msr-katigoria-diag' ] ) ) {		update_post_meta( $post_id, 'msr-katigoria-diag', $_POST[ 'msr-katigoria-diag' ] );	}		if( isset( $_POST[ 'msr-pollaplis-num-diag' ] ) ) {		update_post_meta( $post_id, 'msr-pollaplis-num-diag', $_POST[ 'msr-pollaplis-num-diag' ] );	}		if( isset( $_POST[ 'msr-pollaplis-var-diag' ] ) ) {		update_post_meta( $post_id, 'msr-pollaplis-var-diag', $_POST[ 'msr-pollaplis-var-diag' ] );	}		if( isset( $_POST[ 'msr-anaptiksis-num-diag' ] ) ) {		update_post_meta( $post_id, 'msr-anaptiksis-num-diag', $_POST[ 'msr-anaptiksis-num-diag' ] );	}			if( isset( $_POST[ 'msr-anaptiksis-var-diag' ] ) ) {		update_post_meta( $post_id, 'msr-anaptiksis-var-diag', $_POST[ 'msr-anaptiksis-var-diag' ] );	}		if( isset( $_POST[ 'msr-vathm-diag' ] ) ) {		update_post_meta( $post_id, 'msr-vathm-diag', $_POST[ 'msr-vathm-diag' ] );	}		if( isset( $_POST[ 'msr-random-diag' ] ) ) {		update_post_meta( $post_id, 'msr-random-diag', $_POST[ 'msr-random-diag' ] );	}}add_action( 'save_post', 'msr_diagonismata_meta_save' );